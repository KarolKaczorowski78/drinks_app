{"version":3,"sources":["components/drinks/navigation/logo/logo.tsx","components/drinks/drink/ingredients_list/ingredientsList.tsx","components/drinks/drink/drink.tsx","recieving_data/get_requests/get_cocktail_by_name.tsx","components/drinks/navigation/search/searcher.tsx","recieving_data/get_requests/get_filters.tsx","recieving_data/filterer.tsx","components/drinks/navigation/filter/filter_picker/filter_picker_button/filterPickerButton.tsx","components/drinks/navigation/filter/filter_picker/filter_picker_input/filterPickerInput.tsx","components/drinks/exit_button/exitButton.tsx","components/drinks/navigation/filter/filter_picker/utils/fetchedFilters.ts","components/drinks/navigation/filter/filter_picker/filterPicker.tsx","components/drinks/navigation/filter/filter_list/filter_list_button/filterListButton.tsx","recieving_data/get_requests/get_cocktails_by_filter_2.ts","components/drinks/navigation/filter/filter_list/confirm_fillter_button/confirmFilterButton.tsx","components/drinks/navigation/filter/filter_list/clear_filters_button/clearFiltersButton.tsx","universal/ts/capitalizeWord.ts","components/drinks/navigation/filter/filter_list/filterList.tsx","components/drinks/navigation/filter/filter.tsx","components/drinks/navigation/navigation.tsx","components/drinks/drinks_container/drinksContainer.tsx","pages/drinks.tsx","components/home/main_button/mainButton.tsx","components/home/browse_drinks_button/browseDrinksButton.tsx","components/home/home_section/homeSection.tsx","components/home/filters/filter.tsx","components/home/filters/filters.tsx","components/home/contact/contact.tsx","components/home/scroll_to_top_button/scrollToTopButton.tsx","pages/home.tsx","components/contact/contact_form/contactForm.tsx","components/contact/social_media_button/socialMedia.tsx","pages/contact.tsx","recieving_data/get_requests/get_cocktail_by_id.tsx","components/drink_details/detailed_drink/detailedDrink.tsx","pages/drink_details.tsx","index.tsx","recieving_data/get_requests/get_cocktails.tsx","universal/ts/prepare_ingredients.tsx","components/home/home_image/homeImage.tsx","components/universal/browse_drinks_button/browseDrinksButton.tsx","img/IntroductionImg.jpg","app.tsx","img/AboutImg.jpg","img/CategoryImg.jpg","img/AlcoholicImg.jpg","img/IngredientImg.jpg","img/GlassImg.jpg","img/ContactImg.jpg","pages/404.tsx"],"names":["Logo","className","IngredientsList","props","style","background","ingredients","map","ingredient","i","length","key","Drink","details","idDrink","strDrink","strDrinkThumb","data","usePalette","lightVibrant","color","darkVibrant","src","alt","to","vibrant","getCocktailByName","name","getCocktails","then","drinksArray","drink","catch","err","Searcher","searchInput","useRef","sendDrinks","useContext","DisplayedDrinksContext","handleClick","a","updateDrinks","current","value","onSubmit","event","preventDefault","ref","placeholder","type","onClick","getFilter","filterName","charAt","toLowerCase","arr","Object","values","Filterer","category","alcoholic","glass","updateFilterer","propName","FilterPickerButton","usedContext","FilterContext","chosenFilter","changeChosenFilters","toggleFilterPickerVisibility","FilterPickerInput","currentFilter","onChange","e","setSearch","target","ExitButton","exitFunction","fetchedFilters","FilterPicker","useState","options","setOptions","searchValue","setSearchValue","recieveOptions","keys","FetchedFilters","includes","getFilterOptions","getFilters","newOptions","useEffect","visible","display","setVisibility","option","FilterListButton","contextShit","changeChosenFilter","fontSize","getCocktailsByFilter","filters","entries","filter","Promise","all","firstFilterDrinks","flat","drinksThatFitConditions","strCategory","strAlcoholic","strGlass","prepareIngredients","startsWith","ConfirmFilterButton","Array","from","Set","recivedCocktails","ClearFiltersButton","forEach","capitalizeWord","word","toUpperCase","slice","FilterList","chosenFiltersState","setChosenFiltersState","chosenFilters","s","createContext","Filter","initialChosenFilters","setChosenFilter","setChosenFilters","filterPickerVisibility","setFilterPickerVisibility","providerValue","Provider","Navigation","DrinksContainer","prepareDrinks","ammountOfShownDrinks","setAmmountOfShownDrinks","isSubscribed","setSubscribed","drinks","setDrinks","onScroll","el","document","querySelector","scrollH","scrollHeight","clientHeight","scrollTop","Drinks","displayedDrinks","setDisplayedDrinks","componentDidMount","setComponentDidMount","changeDisplayedDrinks","initialGetDrinks","undefined","find","val","initialDisplayedDrinks","MainButton","clickScrollValue","window","scrollTo","top","innerHeight","behavior","children","BrowseDrinksButton","textDecoration","HomeSection","isDisplayed","setIsDisplayed","useInView","threshold","inView","entry","showSection","tl","gsap","timeline","defaults","stagger","console","log","images","getElementsByTagName","headlings","buttons","getElementsByClassName","isDiv","tagName","autoAlpha","x","y","duration","Filters","ImageCategory","ImageIngredient","ImageAlcoholic","ImageGlass","Contact","show","setShow","icon","setIcon","setTimeout","opacity","onMouseOut","onMouseOver","ScrollToTopButton","visiblility","addEventListener","scrollY","Home","side","MainImage","MissionImage","maxWidth","ContactForm","handleSubmit","htmlFor","id","SocialMedia","sectionContainer","elements","childNodes","ContactImage","targetPage","getCocktailById","DetailedDrink","img","instruction","boxShadow","DrinkDetails","useParams","drinkDetails","setDrinkDetails","strInstructions","ReactDOM","render","getElementById","method","query","fetch","json","HomeImage","RedirectButton","module","exports","App","basename","__dirname","path","exact","component","ErrorPage","errorPage","textAlign","paddingTop"],"mappings":"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","file":"static/js/main.eacb64ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './logo.scss';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo-container\">\r\n            <i className=\"fas fa-glass-cheers\"></i>\r\n            <span> Drinkery</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './ingredients_list.scss';\r\n\r\nconst IngredientsList = (props: { ingredients: string[], background: string | undefined }) => {\r\n\r\n    return (\r\n        <ul style={{ background: props.background }} className={ `drink-ingredients-list` }>\r\n            { props.ingredients.map((ingredient, i) => \r\n                                    ingredient.length > 0 && <li key={ i }>{ ingredient }</li>) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default IngredientsList;\r\n","import React from 'react';\r\nimport IngredientsList from './ingredients_list/ingredientsList';\r\nimport { usePalette } from 'react-palette';\r\nimport { Link } from 'react-router-dom';\r\nimport './drink.scss';\r\n\r\nfunction Drink(props: {  details: string[], ingredients: string[] }) {\r\n\r\n    const [idDrink, strDrink, strDrinkThumb] = props.details;\r\n    const { data } = usePalette(strDrinkThumb);\r\n\r\n    return (\r\n        <div className=\"drink\" \r\n        style={{ background: data.lightVibrant, color: data.darkVibrant }}>\r\n            <img className=\"drink-image\" src={ strDrinkThumb } alt={ strDrink } />\r\n            <h3 className=\"drink-name-container\">{ strDrink }</h3>\r\n            <button style={{ background: data.darkVibrant }} className=\"drink-ingredients\">\r\n                <span>Ingredients</span> \r\n                <IngredientsList background={ data.darkVibrant } ingredients={ props.ingredients } />\r\n            </button>\r\n            <Link to={`drinks/${idDrink}`}>\r\n                <button style={{ background: data.vibrant }} className=\"drink-details\">\r\n                    <span>More details</span> \r\n                </button>\r\n            </Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drink;\r\n","import getCocktails from './get_cocktails';\r\nimport Drink from '../../components/drinks/drink/drink';\r\n\r\nconst getCocktailByName = (name: string): Promise<Drink[]> => \r\n    getCocktails('search', 's', name)\r\n    .then((drinksArray: Drink[]) => drinksArray.map((drink) => drink))\r\n    .catch(err => []);\r\n\r\n\r\nexport interface Drink {\r\n    idDrink: string;\r\n    strDrink: string;\r\n    strAlcoholic: string;\r\n    strGlass: string;\r\n    strCategory: string;\r\n    strDrinkThumb: string;\r\n    ingredients: string[];\r\n    strInstructions?: string;\r\n}\r\n\r\nexport default getCocktailByName;","import React, { useRef, useContext } from 'react';\r\nimport { DisplayedDrinksContext } from '../../../../pages/drinks';\r\nimport getCocktailByName from '../../../../recieving_data/get_requests/get_cocktail_by_name';\r\nimport './searcher.scss';\r\n\r\nconst Searcher = () => {\r\n\r\n    const searchInput = useRef<HTMLInputElement>(null);\r\n    const sendDrinks = useContext(DisplayedDrinksContext);\r\n\r\n    const handleClick = async () => {\r\n        const { updateDrinks } = sendDrinks;\r\n        updateDrinks(searchInput.current !== null ? \r\n            await getCocktailByName(searchInput.current.value) : [])\r\n    }\r\n\r\n    return (\r\n        <form className=\"search-form\" onSubmit={ event => event.preventDefault()}>\r\n                <input ref={ searchInput } placeholder=\"Find by name\" className=\"search-form-input\" type=\"text\" />\r\n                <button className=\"search-form-submit\" onClick={ handleClick }>\r\n                    <i className=\"fa fa-search\"></i>\r\n                </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searcher;\r\n","import getCocktails from './get_cocktails';\r\n\r\nconst getFilter = (filterName: string): Promise<string[]> => \r\n    getCocktails('list', filterName.charAt(0).toLowerCase(), \"list\")\r\n    .then(arr => arr.map(drink => Object.values(drink)[0]));\r\n\r\n\r\nexport default getFilter;","const Filterer: FiltererInterface = {\r\n    category: '',\r\n    ingredient: '',\r\n    alcoholic: '',\r\n    glass: '',\r\n}\r\n\r\nexport type FiltererProp = keyof FiltererInterface;\r\n\r\nexport const updateFilterer = (propName: FiltererProp, value: string): void => {\r\n    Filterer[propName] = value;\r\n}\r\n\r\nexport const clearFilterer = (): void => {\r\n    Object.keys(Filterer).forEach((key: any) => updateFilterer(key, ''));\r\n}\r\n\r\ninterface FiltererInterface {\r\n    category: string;\r\n    ingredient: string;\r\n    alcoholic: string;\r\n    glass: string;\r\n}\r\n\r\nexport default Filterer;","import React, { useContext } from 'react'\r\nimport { updateFilterer } from '../../../../../../recieving_data/filterer';\r\nimport { FilterContext } from '../../filter';\r\nimport Filterer from '../../../../../../recieving_data/filterer';\r\nimport './filter_picker_button.scss';\r\n\r\nconst FilterPickerButton = (props: { value: string }) => {\r\n\r\n    const usedContext = useContext(FilterContext);\r\n\r\n    const handleClick = () => {\r\n        if (usedContext !== null) {\r\n            const { chosenFilter, changeChosenFilters, toggleFilterPickerVisibility } = usedContext;\r\n            \r\n            updateFilterer(chosenFilter.toLowerCase(), props.value);\r\n            toggleFilterPickerVisibility(false);\r\n            changeChosenFilters(Object.values(Filterer));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={ handleClick } className=\"filter-picker-button\">\r\n            { props.value }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilterPickerButton;\r\n","import React, { Dispatch, SetStateAction, ChangeEvent } from 'react';\r\nimport './filter_picker_input.scss';\r\n\r\nconst FilterPickerInput = (props: { setSearch: Dispatch<SetStateAction<string>>, currentFilter: string }) => {\r\n\r\n    const handleKeyUp = (event: ChangeEvent<HTMLInputElement>) => {\r\n        props.setSearch(event.target.value.toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <input placeholder={ `Find ${props.currentFilter}` } \r\n               onChange={ e => handleKeyUp(e) } \r\n               className=\"filter-picker-input\" />\r\n    )\r\n}\r\n\r\nexport default FilterPickerInput;\r\n","import React from 'react'\r\nimport './exit_button.scss';\r\n\r\nconst ExitButton = (props: { exitFunction: () => void }) => {\r\n    return (\r\n        <button onClick={ props.exitFunction } className=\"exit-button\">\r\n            X\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ExitButton;\r\n","const fetchedFilters: any = {  }\r\n\r\nexport default fetchedFilters;","import React, { useEffect, useState, useContext, Dispatch, SetStateAction } from 'react'\r\nimport getFilters from '../../../../../recieving_data/get_requests/get_filters';\r\nimport FilterPickerButton from './filter_picker_button/filterPickerButton';\r\nimport FilterPickerInput from './filter_picker_input/filterPickerInput';\r\nimport ExitButton from '../../../exit_button/exitButton';\r\nimport { FilterContext } from '../filter';\r\nimport FetchedFilters from './utils/fetchedFilters';\r\nimport './filter_picker.scss';\r\n\r\nconst FilterPicker = (props: { visible: boolean, setVisibility: Dispatch<SetStateAction<boolean>> }) => {\r\n\r\n    const usedContext = useContext(FilterContext);\r\n\r\n    const [options, setOptions] = useState<string[]>([])\r\n    const [searchValue, setSearchValue] = useState<string>('');\r\n\r\n    const recieveOptions = async (): Promise<void> => {\r\n        if (usedContext !== null && usedContext.chosenFilter.length > 0) {\r\n            const { chosenFilter } = usedContext;\r\n            !Object.keys(FetchedFilters).includes(chosenFilter) ? \r\n                getFilterOptions(chosenFilter) : setOptions(FetchedFilters[chosenFilter]);         \r\n        }\r\n    }\r\n\r\n    const getFilterOptions = async (chosenFilter: string) => {\r\n        const newOptions = await getFilters(chosenFilter);\r\n        FetchedFilters[chosenFilter] = newOptions;\r\n        setOptions(newOptions);\r\n    }\r\n\r\n    useEffect(() => {\r\n       props.visible && recieveOptions();\r\n    });\r\n    \r\n    return (\r\n        <div style={{ display: (props.visible ? 'flex' : 'none') }} className=\"filter-picker\">\r\n            <ExitButton exitFunction={ () => props.setVisibility(false) } />\r\n            <FilterPickerInput setSearch={ setSearchValue } currentFilter={ usedContext?.chosenFilter } />\r\n            { options.map((option, i) => \r\n            (option.toLowerCase().includes(searchValue) && option.length > 0 ) && \r\n                                <FilterPickerButton value={ option } key={ i } />) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPicker;\r\n","import React, { useContext } from 'react'\r\nimport { FilterContext } from '../../filter';\r\nimport './filter_list_button.scss';\r\n\r\nconst FilterListButton = (props: { filterName: string, chosenFilter: string }) => {\r\n\r\n    const contextShit = useContext(FilterContext);\r\n\r\n    const handleClick = () => {\r\n        if (contextShit !== null) {\r\n            const { changeChosenFilter, toggleFilterPickerVisibility } = contextShit;\r\n            changeChosenFilter(props.filterName);\r\n            toggleFilterPickerVisibility(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={ handleClick } className=\"filter-list-button\">\r\n            { props.filterName }\r\n            <span style={{ fontSize: '.75rem', display: 'block' }}>{ props.chosenFilter }</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilterListButton;\r\n","import getCocktails from './get_cocktails';\r\nimport Filterer, { FiltererProp } from '../filterer';\r\nimport getCocktailByName from './get_cocktail_by_name';\r\nimport prepareIngredients from '../../universal/ts/prepare_ingredients';\r\n\r\nconst getCocktailsByFilter = async () => {\r\n    const filters: FiltererProp[][] = Object.entries(Filterer).filter(([k, v]) => v.length > 0);\r\n    \r\n    const firstFilterDrinks = \r\n        (await getCocktails('filter', filters[0][0].charAt(0), filters[0][1])\r\n            .then(async (drinksArray) => await Promise.all(drinksArray.map(async ({ strDrink }) => \r\n            (await getCocktailByName(strDrink))[0])))).flat().flat();\r\n\r\n    const drinksThatFitConditions = firstFilterDrinks.filter((drink) => {\r\n        const { category, ingredient, alcoholic, glass } = Filterer;\r\n        const { strCategory, strAlcoholic, strGlass } = drink;\r\n        const ingredients = prepareIngredients(drink);\r\n\r\n        return (category.toLowerCase().includes(strCategory.toLowerCase())\r\n            && ingredient.length > 0 ? ingredients.includes(ingredient) : true\r\n            && strGlass.toLowerCase().includes(glass.toLowerCase())\r\n            && alcoholic.length > 0 ? alcoholic.toLowerCase().startsWith(strAlcoholic.toLowerCase()) : true)});\r\n\r\n    return drinksThatFitConditions;    \r\n}\r\n\r\nexport default getCocktailsByFilter;","import React, { useContext } from 'react';\r\n// import getCocktailsByFilter from '../../../../../../recieving_data/get_requests/get_cocktails_by_filter';\r\nimport { DisplayedDrinksContext } from '../../../../../../pages/drinks';\r\nimport getCocktailsByFilter from '../../../../../../recieving_data/get_requests/get_cocktails_by_filter_2';\r\nimport './confirm_filter_button.scss';\r\nimport '../filter_list_button/filter_list_button.scss';\r\nimport Filterer from '../../../../../../recieving_data/filterer';\r\nimport getCocktailByName from '../../../../../../recieving_data/get_requests/get_cocktail_by_name';\r\n\r\nconst ConfirmFilterButton = () => {\r\n\r\n    const usedContext = useContext(DisplayedDrinksContext)\r\n\r\n    const handleClick = async () => {\r\n        const recivedCocktails = Array.from(new Set(Object.values(Filterer))).length > 1 ?\r\n                await getCocktailsByFilter() : await getCocktailByName('');\r\n        \r\n        usedContext.updateDrinks(recivedCocktails);\r\n    }\r\n\r\n    return (\r\n        <button onClick={ handleClick } className=\"filter-list-button confirm-filter-button\">\r\n            <span>Filter  </span>  \r\n            <i className=\"fas fa-sync-alt\"></i> \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ConfirmFilterButton;\r\n","import React, { useContext } from 'react'\r\nimport { FilterContext } from '../../filter';\r\nimport { clearFilterer } from '../../../../../../recieving_data/filterer';\r\nimport '../filter_list_button/filter_list_button.scss';\r\nimport './clear_filters_button.scss';\r\n\r\nconst ClearFiltersButton = () => {\r\n\r\n    const usedContext = useContext(FilterContext);\r\n\r\n    const handleClick = () => {\r\n        clearFilterer();\r\n        usedContext !== null && usedContext.changeChosenFilters(['', '', '', '']);\r\n    }\r\n\r\n    return (\r\n        <button onClick={ handleClick } className=\"filter-list-button clear-filters-button\">\r\n            <span>Clear filters  </span> \r\n            <i className=\"fas fa-broom\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ClearFiltersButton;\r\n","const capitalizeWord = (word: string): string => \r\n    `${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`;\r\n\r\nexport default capitalizeWord;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { FilterContext } from '../filter';\r\nimport FilterListButton from './filter_list_button/filterListButton';\r\nimport ConfirmFilterButton from './confirm_fillter_button/confirmFilterButton';\r\nimport ClearFiltersButton from './clear_filters_button/clearFiltersButton';\r\nimport Filterer from '../../../../../recieving_data/filterer';\r\nimport capitalizeWord from '../../../../../universal/ts/capitalizeWord';\r\nimport './filter_list.scss';\r\n\r\nconst FilterList = () => {\r\n\r\n    const usedContext = useContext(FilterContext);\r\n    const [chosenFiltersState , setChosenFiltersState] = useState<string[]>(['', '', '', '']);\r\n\r\n    useEffect(() => {\r\n        usedContext !== null && setChosenFiltersState(usedContext.chosenFilters);\r\n    }, [usedContext]);\r\n\r\n    useEffect(() => {\r\n        setChosenFiltersState(Object.values(Filterer));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"filter-list-container\">\r\n            <ConfirmFilterButton />\r\n            { chosenFiltersState.map((s, i) => <FilterListButton \r\n                                    key={ i }\r\n                                    filterName={ capitalizeWord(Object.keys(Filterer)[i]) } \r\n                                    chosenFilter={ s } />) } \r\n            <ClearFiltersButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterList;\r\n","import React, { useState, createContext, SetStateAction, Dispatch } from 'react';\r\nimport FilterPicker from './filter_picker/filterPicker';\r\nimport FilterList from './filter_list/filterList';\r\nimport Filterer from '../../../../recieving_data/filterer';\r\nimport './filter.scss';\r\n\r\nexport const FilterContext = createContext<contextInterface | null>(null);\r\n\r\nconst Filter = () => {\r\n\r\n    const initialChosenFilters: string[] = Object.values(Filterer);\r\n\r\n    const [chosenFilter, setChosenFilter] = useState('');\r\n    const [chosenFilters, setChosenFilters] = useState<string[]>(initialChosenFilters);\r\n    const [filterPickerVisibility, setFilterPickerVisibility] = useState<boolean>(false);\r\n\r\n    const providerValue = { \r\n        changeChosenFilter: setChosenFilter, \r\n        changeChosenFilters: setChosenFilters,\r\n        toggleFilterPickerVisibility: setFilterPickerVisibility,\r\n        chosenFilter: chosenFilter, \r\n        chosenFilters: chosenFilters \r\n    }\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            <i className=\"filter-icon fas fa-sort-amount-down\"></i>\r\n            <FilterContext.Provider value={ providerValue }>\r\n                <FilterPicker visible={ filterPickerVisibility } setVisibility={ setFilterPickerVisibility } />\r\n                <FilterList /> \r\n            </FilterContext.Provider>                  \r\n        </div>\r\n    )\r\n}\r\n\r\ninterface contextInterface {\r\n    changeChosenFilter: Dispatch<SetStateAction<string>>;\r\n    changeChosenFilters: Dispatch<SetStateAction<string[]>>;\r\n    toggleFilterPickerVisibility: Dispatch<SetStateAction<boolean>>;\r\n    chosenFilter: any;\r\n    chosenFilters: string[];\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Logo from './logo/logo';\r\nimport Searcher from './search/searcher';\r\nimport Filter from './filter/filter';\r\nimport './navigation.scss';\r\n\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        <nav className=\"navigation\">\r\n            <Logo />\r\n            <Searcher />\r\n            <Filter />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { ReactNode, useState, useEffect } from 'react';\r\nimport Drink from '../drink/drink';\r\nimport { Drink as DrinkInterface } from '../../../recieving_data/get_requests/get_cocktail_by_name';\r\nimport prepareIngredients from '../../../universal/ts/prepare_ingredients';\r\nimport './drinks_container.scss';\r\n\r\nconst DrinksContainer = (props: { drinks: DrinkInterface[] }) => {\r\n\r\n    const prepareDrinks = (drinksArray: DrinkInterface[]): ReactNode[] => \r\n        drinksArray.map((drink, i) => {\r\n            const { idDrink, strDrink, strDrinkThumb } = drink;\r\n            const ingredients: string[] = prepareIngredients(drink);\r\n            const details = [idDrink, strDrink, strDrinkThumb];\r\n            return  <Drink details={ details } ingredients={ ingredients } key={ `${i}` } />\r\n        });\r\n\r\n    const [ammountOfShownDrinks, setAmmountOfShownDrinks] = useState<number>(15);\r\n    const [isSubscribed, setSubscribed] = useState<boolean>(false);\r\n    const [drinks, setDrinks] = useState<ReactNode[]>([]);\r\n\r\n    const handleScroll = () => {\r\n        const el: HTMLDivElement | null = document.querySelector('.drinks-container');\r\n        if (el !== null) {\r\n            const scrollH = el.scrollHeight - el.clientHeight;\r\n            el.scrollTop >= scrollH && setAmmountOfShownDrinks(ammountOfShownDrinks + 15);\r\n            setSubscribed(true);\r\n        }\r\n    }\r\n\r\n    const showMoreDrinks = () => {\r\n        setSubscribed(true);\r\n        (isSubscribed && drinks.length !== props.drinks.length) && \r\n            setDrinks(prepareDrinks(props.drinks.slice(0, ammountOfShownDrinks)));\r\n        setSubscribed(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        showMoreDrinks();\r\n    }, [ammountOfShownDrinks, props.drinks]);\r\n\r\n    useEffect(() => {\r\n        setDrinks([]);\r\n        setAmmountOfShownDrinks(15);\r\n    }, [props.drinks]);\r\n\r\n    return (\r\n        <div onScroll={ handleScroll } className=\"drinks-container\">\r\n            { drinks.length === 0 ? prepareDrinks(props.drinks.slice(0, 15)) : drinks }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrinksContainer;\r\n","import React, { FC, useState, useEffect, createContext } from 'react';\r\nimport Navigation from '../components/drinks/navigation/navigation';\r\nimport DrinksContainer from '../components/drinks/drinks_container/drinksContainer';\r\nimport getCocktailByName, { Drink } from '../recieving_data/get_requests/get_cocktail_by_name';\r\nimport getCocktailsByFilter from '../recieving_data/get_requests/get_cocktails_by_filter_2';\r\nimport Filterer from '../recieving_data/filterer';\r\n\r\nexport const DisplayedDrinksContext = createContext<{ \r\n        updateDrinks: (drinks: Drink[]) => void \r\n    }>({ updateDrinks: (drinks: Drink[]) => {  } });\r\n\r\nconst Drinks: FC = () => {\r\n \r\n    const [displayedDrinks, setDisplayedDrinks] = useState<Drink[]>([]);\r\n    const [componentDidMount, setComponentDidMount] = useState<boolean>(false);\r\n\r\n    const changeDisplayedDrinks = (drinks: Drink[]): void => {\r\n        setDisplayedDrinks([...drinks]);\r\n    }\r\n\r\n    const initialGetDrinks = async (): Promise<void> => {\r\n        setComponentDidMount(true);\r\n\r\n        const initialDisplayedDrinks = \r\n            Object.values(Filterer).find(val => val.length > 0) !== undefined ?\r\n                await getCocktailsByFilter() : await getCocktailByName('');\r\n\r\n        changeDisplayedDrinks(initialDisplayedDrinks);\r\n    }\r\n\r\n    useEffect(() => {\r\n        !componentDidMount && initialGetDrinks();\r\n    });\r\n\r\n    return (    \r\n        <>\r\n            <DisplayedDrinksContext.Provider value={{ updateDrinks: changeDisplayedDrinks }}>\r\n                <Navigation />\r\n                <DrinksContainer drinks={ displayedDrinks } />\r\n            </DisplayedDrinksContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Drinks;","import React from 'react'\r\nimport './main_button.scss';\r\n\r\nconst MainButton = (props: { children: string, clickScrollValue: boolean | number }) => {\r\n\r\n    const handleClick = () => {\r\n        typeof props.clickScrollValue === \"number\" && window.scrollTo({ \r\n                                            top: window.innerHeight * props.clickScrollValue + 50, \r\n                                            behavior: 'smooth' });\r\n    }\r\n\r\n\r\n    return (\r\n        <button onClick={ handleClick } className=\"main-button\">\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default MainButton;\r\n","import React from 'react'\r\nimport MainButton from '../main_button/mainButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BrowseDrinksButton = () => {\r\n\r\n    return (\r\n        <Link to=\"/drinks\" style={{ textDecoration: 'none' }}>\r\n            <MainButton clickScrollValue={ false }>\r\n                Browse drinks!\r\n            </MainButton>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default BrowseDrinksButton;\r\n","import React, { ReactNode, useEffect, useState } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport gsap, { TimelineLite } from 'gsap';\r\nimport './home_section.scss';\r\n\r\nconst HomeSection = (props: { children: ReactNode }) => {\r\n\r\n    const [isDisplayed, setIsDisplayed] = useState<boolean>(false);\r\n    const [ref, inView, entry] = useInView({ threshold: .6 });\r\n\r\n    useEffect(() => {\r\n        (inView && !isDisplayed) && showSection();\r\n    });\r\n\r\n    const showSection = () => {\r\n        if (entry?.target !== undefined) {\r\n            const tl: TimelineLite = gsap.timeline({ defaults: { stagger: .3 } });\r\n            console.log(`Showing`);\r\n            const images: HTMLImageElement[] = Array.from(entry.target.getElementsByTagName('img'));\r\n            const headlings: HTMLHeadingElement[] = Array.from(entry.target.getElementsByTagName('h1'));\r\n            const buttons: HTMLButtonElement[] = Array.from(entry.target.getElementsByTagName('button'));\r\n            const paragraphs: HTMLParagraphElement[] = Array.from(entry.target.getElementsByTagName('p'));\r\n            const divs: Element[] = Array.from(entry.target.getElementsByClassName('filters-introduction-container-image-container'));\r\n\r\n            const elements = [images, headlings, paragraphs, buttons, divs].flat();\r\n            elements.forEach(el => {\r\n                const isDiv = el.tagName === 'DIV';\r\n\r\n                el && tl.to(el, { autoAlpha: 1, x: 0, y: 0, duration: (isDiv ? .2 : .5) })\r\n            })\r\n\r\n            setIsDisplayed(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"home-section\" ref={ ref }>\r\n            { props.children }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HomeSection;\r\n","import React from 'react';\r\n\r\nconst Filter = (props: { src: string, filterName: string }) => {\r\n    return (\r\n        <div className=\"filters-introduction-container-image-container\">\r\n            <div className=\"filters-introduction-container-image-container-hidden-content\">\r\n                <h2>{ props.filterName }</h2>\r\n            </div> \r\n            <img className=\"filters-introduction-container-image\" src={ props.src } alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react'\r\nimport ImageCategory from '../../../img/CategoryImg.jpg';\r\nimport ImageAlcoholic from '../../../img/AlcoholicImg.jpg';\r\nimport ImageIngredient from '../../../img/IngredientImg.jpg';\r\nimport ImageGlass from '../../../img/GlassImg.jpg';\r\nimport Filter from './filter';\r\nimport './filters.scss';\r\n\r\nconst Filters = () => {\r\n    return (\r\n        <div className=\"filters-introduction-container\">\r\n            <Filter src={ ImageCategory } filterName=\"Category\" />\r\n            <Filter src={ ImageIngredient } filterName=\"Ingredient\" />\r\n            <Filter src={ ImageAlcoholic } filterName=\"Alcohol content\" />\r\n            <Filter src={ ImageGlass } filterName=\"Glass\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './contact.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Contact = () => {\r\n\r\n    const mouseOutIcon: string = \"fas fa-envelope\";\r\n    const mouseOverIcon: string = \"fas fa-envelope-open\";\r\n\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const [icon, setIcon] = useState<string>(mouseOutIcon);\r\n\r\n    const handleMouseOver = () => { setIcon(mouseOverIcon) }\r\n\r\n    const handleMouseOut = () => { setIcon(mouseOutIcon) }\r\n\r\n    useEffect(() => {\r\n        (() => { setTimeout(() => setShow(true), 4000) })()\r\n    }, []);\r\n\r\n    return (\r\n        <Link to='/contact' style={{ textDecoration: 'none' }}>\r\n            <button style={{ opacity: show ? 1 : 0 }} className=\"contact\" \r\n                    onMouseOut={ handleMouseOut } \r\n                    onMouseOver={ handleMouseOver }>\r\n                    <i className={ icon }></i>\r\n            </button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import React, { useState } from 'react';\r\nimport './scroll_to_top_button.scss';\r\n\r\nconst ScrollToTopButton = () => {\r\n\r\n    const handleClick = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    const [visiblility, setVisibility] = useState<string>('');\r\n\r\n    window.addEventListener('scroll', () => {\r\n        if (window.scrollY > window.innerHeight / 2 && visiblility === '') {\r\n            setVisibility('shown');\r\n        } else if (window.scrollY < window.innerHeight / 2 && visiblility === 'shown') {\r\n            setVisibility('');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <button onClick={ handleClick } className={ `scroll-to-top-button ${visiblility}` }>\r\n            <i className=\"fas fa-arrow-up\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ScrollToTopButton;\r\n","import React from 'react'\r\nimport HomeImage from '../components/home/home_image/homeImage';\r\nimport MainButton from '../components/home/main_button/mainButton';\r\nimport BrowseDrinksButton from '../components/home/browse_drinks_button/browseDrinksButton';\r\nimport HomeSection from '../components/home/home_section/homeSection';\r\nimport MainImage from '../img/IntroductionImg.jpg';\r\nimport MissionImage from '../img/AboutImg.jpg';\r\nimport Filters from '../components/home/filters/filters';\r\nimport Contact from '../components/home/contact/contact';\r\nimport ScrollToTopButton from '../components/home/scroll_to_top_button/scrollToTopButton';\r\nimport '../components/home/home_section.scss';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <HomeSection>\r\n                <HomeImage side=\"left\" src={ MainImage } />\r\n                <HomeImage side=\"right\" src={ MainImage } />\r\n                <h1>Welcome on Drinkery!</h1>\r\n                <p><b>Find Your ambrozia nectar!</b></p>\r\n                <BrowseDrinksButton />\r\n                <MainButton clickScrollValue={ 1 }>About site</MainButton>\r\n            </HomeSection>\r\n            <HomeSection>\r\n                <HomeImage side=\"left\" src={ MissionImage } />\r\n                <h1>Our mission</h1>\r\n                <p style={{ maxWidth: \"40ch\" }}>This website has been created for people who have a desire to try new flavours and aromas. Our database contains over 500 drinks, their ingredients and recipes. You can search within multiple categories of drinks or just find your dreamed cocktail by name. The choice is Yours!<br/> <b>Drinkery is a perfect place for finding Your ambrozia nectar!</b></p>\r\n                <MainButton clickScrollValue={ 2 }>See filters</MainButton>\r\n            </HomeSection>\r\n            <HomeSection>\r\n                <h1>Filters</h1>\r\n                <p>You can filter drinks by:</p>\r\n                <Filters />\r\n            </HomeSection>\r\n            <Contact />\r\n            <ScrollToTopButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { FormEvent } from 'react';\r\nimport './contact_form.scss';\r\n\r\nconst ContactForm = () => {\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n    } \r\n\r\n    return (\r\n        <form className=\"contact-section-form\" onSubmit={ e => handleSubmit(e) }>\r\n            <label htmlFor=\"email\">\r\n                Your e-mail adress:\r\n                <input type=\"text\" id=\"email\" placeholder=\"\"/>\r\n            </label>\r\n            <label htmlFor=\"message\">\r\n                Your message:\r\n                <textarea id=\"message\"></textarea>\r\n            </label>\r\n            <label htmlFor=\"notes\">\r\n                Any notes on Drinkify usage?\r\n                <textarea id=\"notes\"></textarea>\r\n            </label>\r\n            <label htmlFor=\"send-message\">\r\n                <input className=\"contact-section-form-submit\" type=\"submit\" id=\"send-message\" value=\"Ask question\"/>\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport './social_media.scss';\r\n\r\nconst SocialMedia = (props: { icon: string }) => {\r\n    return (\r\n        <button className=\"social-media-button\">\r\n            <i className={ props.icon }></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SocialMedia;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport '../components/contact/contact_section.scss';\r\nimport ContactForm from '../components/contact/contact_form/contactForm';\r\nimport SocialMedia from '../components/contact/social_media_button/socialMedia';\r\nimport ContactImage from '../img/ContactImg.jpg';\r\nimport HomeImage from '../components/home/home_image/homeImage';\r\nimport gsap from 'gsap';\r\nimport RedirectButton from '../components/universal/browse_drinks_button/browseDrinksButton';\r\n\r\nconst Contact = () => {\r\n\r\n    const sectionContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        showSection();\r\n    }, [sectionContainer]);\r\n\r\n    const showSection = () => {\r\n        const elements = sectionContainer.current?.childNodes;\r\n        const tl = gsap.timeline({ defaults: { duration: .5 } });\r\n\r\n        elements !== undefined && \r\n                            tl.to(elements, { autoAlpha: 1, x: 0, y: 0, stagger: .35 });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-section\" ref={ sectionContainer }>\r\n            <HomeImage side={ 'left' } src={ ContactImage } />\r\n            <h1>Got any questions?</h1>\r\n            <h3>You are few clicks away from answer!</h3>\r\n            <ContactForm />\r\n            <div>\r\n                <SocialMedia icon=\"fab fa-facebook-f\"/>\r\n                <SocialMedia icon=\"fab fa-instagram\" />\r\n                <SocialMedia icon=\"fab fa-twitter\" />\r\n                <SocialMedia icon=\"fab fa-youtube\" />\r\n            </div>\r\n            <RedirectButton side=\"left\" targetPage=\"\" >Home Page</RedirectButton>\r\n            <RedirectButton side=\"right\" targetPage=\"drinks\" >Browse drinks</RedirectButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import getCocktails from './get_cocktails';\r\nimport { Drink } from './get_cocktail_by_name';\r\n\r\nconst getCocktailById = (id: string): Promise<Drink> => \r\n    getCocktails('lookup', 'i', id)\r\n    .then(([drink]) => drink);   \r\n\r\n\r\nexport default getCocktailById;\r\n","import React from 'react';\r\nimport { usePalette } from 'react-palette';\r\nimport './detailed_drink.scss';\r\n\r\nconst DetailedDrink = (props: { details: any[], ingredients: string[] }) => {\r\n\r\n    const [name, category, alcoholic, img, instruction] = props.details;\r\n    const { data } = usePalette(img);\r\n\r\n    return (\r\n        <div className=\"detailed-drink\" style={{ color: data.darkVibrant, background: data.lightVibrant, boxShadow: `0px 0px 90px 10px ${data.vibrant}` }}>\r\n            <img src={ img } alt=\"\"/>\r\n            <div className=\"detailed-drink-details\">\r\n                <h1>{ name }</h1>\r\n                <h3>{ `${alcoholic} ${category.toLowerCase()}` }</h3>\r\n                <h2>Ingredients</h2>\r\n                <ul>\r\n                    { props.ingredients.map((ingredient, i) => \r\n                        <li key={ i }>{ ingredient }</li>) }\r\n                </ul>\r\n                <h2>Instruction</h2>\r\n                <p>{ instruction }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailedDrink;\r\n","import React, { useState, ReactNode, useEffect } from 'react';\r\nimport getCocktailById from '../recieving_data/get_requests/get_cocktail_by_id';\r\nimport DetailedDrink from '../components/drink_details/detailed_drink/detailedDrink';\r\nimport prepareIngredients from '../universal/ts/prepare_ingredients';\r\nimport RedirectButton from '../components/universal/browse_drinks_button/browseDrinksButton';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../components/drink_details/drink_details.scss';\r\n\r\nconst DrinkDetails = () => {\r\n\r\n    const { id } = useParams();\r\n    const [componentDidMount, setComponentDidMount] = useState<boolean>(false);\r\n    const [drinkDetails, setDrinkDetails] = useState<ReactNode>\r\n        (<h1><i className=\"fas fa-spinner\"></i> Loading drink </h1>);\r\n\r\n    useEffect(() => {\r\n        !componentDidMount && (async () => {\r\n            const drink = await getCocktailById(id);\r\n            const ingredients = prepareIngredients(drink);\r\n\r\n            const { strDrink,strAlcoholic,\r\n                    strCategory,strDrinkThumb,strInstructions } = drink;\r\n\r\n            setComponentDidMount(true);\r\n            setDrinkDetails(<DetailedDrink details={ [strDrink, strCategory, \r\n                                                    strAlcoholic, strDrinkThumb, \r\n                                                    strInstructions] } \r\n                                                    ingredients={ ingredients } />)\r\n\r\n        })()\r\n    });\r\n\r\n    return (\r\n        <div className=\"drink-details-container\">\r\n            <RedirectButton targetPage=\"drinks\" side=\"left\">Browse drinks</RedirectButton>\r\n            { drinkDetails }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrinkDetails;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './main.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n","import { Drink } from './get_cocktail_by_name';\r\n\r\nconst getCocktails = async (method: string, query: string, value: string): Promise<Drink[]> => {\r\n    try {\r\n        const data: Response = await fetch(`https://the-cocktail-db.p.rapidapi.com/${method}.php?${query}=${value}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"4d50f7c52amsh2ec8508c35a7811p1c477ajsn875d8e36fd67\"\r\n            }\r\n        });\r\n        const json = await data.json();\r\n        const drinks: Drink[] = json[Object.keys(json)[0]];\r\n\r\n        return drinks;\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n\r\n}\r\n\r\nexport default getCocktails;","import { Drink } from '../../recieving_data/get_requests/get_cocktail_by_name';\r\n\r\nconst prepareIngredients = (drink: Drink): string[] => Object.entries(drink).filter(([key, value]) => \r\n(key.includes('strIngredient') && value !== null && value.length > 0)).map(entry => entry[1]);\r\n\r\nexport default prepareIngredients;","import React from 'react'\r\nimport './home_image.scss';\r\n\r\nconst HomeImage = (props: { side: string, src: string }) => {\r\n    return (\r\n        <img className={ `home-image ${props.side}` } src={ props.src } alt=\"home\"/>\r\n    )\r\n}\r\n\r\nexport default HomeImage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './browse_drinks_button.scss';\r\n\r\nconst RedirectButton = (props: { targetPage: string, children: string, side: string }) => {\r\n    return (\r\n        <Link className={ `browse-drinks-button ${props.side}-redirect-button` } \r\n                to={ `/${props.targetPage}` }\r\n        >\r\n            { props.children }\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default RedirectButton;\r\n","module.exports = __webpack_public_path__ + \"static/media/IntroductionImg.f49e0959.jpg\";","import React from 'react'\r\nimport Home from './pages/home';\r\nimport Drinks from './pages/drinks';\r\nimport Contact from './pages/contact';\r\nimport DrinkDetails from './pages/drink_details';\r\nimport ErrorPage from './pages/404';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter basename={ __dirname }>\r\n            <>\r\n                <Switch>\r\n                    <Route path='/' exact component={ Home } />\r\n                    <Route path='/drinks' exact component={ Drinks } />\r\n                    <Route path='/drinks/:id/' component={ DrinkDetails } />\r\n                    <Route path='/contact' component={ Contact } />\r\n                    <Route component={ ErrorPage } />\r\n                </Switch>\r\n            </>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","module.exports = __webpack_public_path__ + \"static/media/AboutImg.ec303732.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CategoryImg.b208cb0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AlcoholicImg.38c7d28b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IngredientImg.9586ec1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GlassImg.5412c5e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ContactImg.27eca137.jpg\";","import React from 'react'\r\n\r\nconst errorPage = () => {\r\n    return (\r\n        <div style={{ textAlign: 'center', paddingTop: '20px' }}>\r\n            <h1 style={{ color: 'white' }}>404 - not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default errorPage;\r\n"],"sourceRoot":""}